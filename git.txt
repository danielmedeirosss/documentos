para iniciar o git
git init
--bare(para indiciar um diretorio limpo)

mostrar o que está sendo monitorado
git status

para monitorar arquivo
git add (nome do arquivo)
git add . (todos os arquivos)

git commit -m "mensagem descritiva"

git log
para pegar os logs do git
git log --oneline (para mostrar em uma linha)
gitlog -p  (mostrar com mais detalhes) 
--graph (mostra um grafico de linhas de branchs)

git config 
--local ( todos os commits dados neste local ficam para este usuario)
user.name "nome"
user.email(email)

para ignorar um arquivo ou pasta
para a pasta (o nome)/
para arquivo o noem tem q ter gitignore

git remote
add (nome do local) (caminho)
-v para ver o local 

git clone (caminho) para clonar o caminho para o diretorio atual
git clone (caminho) nome da pasta

git pull (nome do local) (nome da branch) para receber os arquivos
git push (nome do local) (nome da branch) para enviar os arquivos 
-u atalho

git branch (nome do branch)
git branch  para mostrar todos os branchs 
git checkout (nome do branch)

para fazer o merge  faça a alteração vá muda para o master
git merge (nome do branch)

para voltar o status do codigo antes do commit.
git checkout -- (nome do arquivo)

Caso eu já tenha marcado para commitar mas ainda não commitei
git reset head (nome do arquivo)


para desfazer um commit especifico
git reverse (hash do commit)

git rebase (nome do branch) para deixar todos os logs na mesma branch

git stash (salva o arquivo tipo um save rapido)
list para listar

git stash apply (numero da stash) para aplicar o stash
git stash drop ( retira a ultima stash)
git stash pop  tira da stash a ultima stash e aplica as configurações 

git checkout (hash do commit) com este comando vc vai retonar o arquivo para o estado do commit
mas caso vc precise continuar ele preicsa criar um novo branch

git diff (hash do commit)..(hash do commit) para ver diferenças de um commit até o outro 
git diff mostra as alterações de um arquivo que foi alterado mas ainda não commitado